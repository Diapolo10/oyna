# tox (https://tox.readthedocs.io/) is a generic virtualenv management and test command line tool
# that can be used for:
# - checking your package installs correctly with different Python versions and interpreters
# - running your tests in each of the environments, configuring your test tool of choice
# - acting as a frontend to Continuous Integration servers, greatly reducing boilerplate and merging
#   CI and shell-based testing.


[tox:tox]
isolated_build = True
skip_missing_interpreters = true
requires =
    tox>=4
envlist = py3{13,12,11,10}

[testenv]
# This section is for running unit tests.
package = wheel
wheel_build_env = .pkg
use_frozen_constraints = true
description = run unit tests - {envname}
skip_install = true
deps =
    .
    pytest
    pytest-xdist
    pytest-randomly

# Run pytest on the tests directory with 4 CPUs and check coverage
commands =
    pytest {posargs} -n 4


[testenv:lint]
# This environment is for running linters to check the code quality.
description = run linters
skip_install = true
deps =
    ruff

# Check the current directory and auto-fix issues.
commands = ruff check {posargs:.}


[testenv:format]
# This environment is for running formatters to format the code.
description = run formatter
skip_install = true
deps =
    ruff

# Format the current directory.
commands = ruff format {posargs:.}


[testenv:typecheck]
# This environment is for running type checks on the code.
# Mypy is a static type checker for Python.
description = run type checks
skip_install = true
deps =
    mypy

# Run mypy on src and tests directories.
commands =
    mypy {posargs:src tests}
